import { useState, useEffect } from 'react';
import { dlOrganizerSales, dlOrganizerRevenue } from '../../api/reports';
import { listMyEvents } from '../../api/organizer';
import Button from '../../components/Button';
import { downloadBlob } from '../../utils/download';
import { Input, Select } from '../../components/Input';
import toast from 'react-hot-toast';

export default function OrganizerReports() {
  const [from, setFrom] = useState('');
  const [to, setTo] = useState('');
  const [events, setEvents] = useState([]);
  const [eventId, setEventId] = useState('');

  useEffect(() => {
    (async () => {
      try {
        const res = await listMyEvents({ includeDraft: true, pageSize: 200 });
        setEvents(res.items || []);
      } catch {
        
      }
    })();
  }, []);

  const params = () => ({
    from: from ? new Date(from).toISOString() : undefined,
    to:   to   ? new Date(to).toISOString()   : undefined,
    eventId: eventId || undefined,
  });

  const go = async (fn, name) => {
    try { 
      const res = await fn(params()); 
      downloadBlob(res, name); 
      toast.success('Download successful');
    } catch { 
      toast.error('Download failed'); 
    }
  };

  return (
    <div className="min-h-screen bg-gray-100 dark:bg-gray-950/75 p-8 font-sans antialiased text-gray-800 dark:text-gray-100">
      <div className="max-w-6xl mx-auto space-y-8">
        <header className="space-y-2">
          <h1 className="text-4xl font-extrabold text-gray-900 dark:text-white tracking-tight">
            Organizer Reports
          </h1>
          <p className="text-gray-600 dark:text-gray-400 max-w-2xl">
            Generate and download financial and attendance reports for your events.
          </p>
        </header>

        {/* Filters Card */}
        <div className="bg-white dark:bg-gray-800 p-6 sm:p-8 rounded-2xl shadow-lg border border-gray-200 dark:border-gray-700">
          <h2 className="text-xl font-bold text-gray-900 dark:text-white mb-4">Filters</h2>
          <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
            <Input 
              label="Start Date" 
              type="datetime-local" 
              value={from} 
              onChange={(e) => setFrom(e.target.value)} 
            />
            <Input 
              label="End Date" 
              type="datetime-local" 
              value={to} 
              onChange={(e) => setTo(e.target.value)} 
            />
            <Select 
              label="Event (optional)" 
              value={eventId} 
              onChange={(e) => setEventId(e.target.value)}
            >
              <option value="">All events</option>
              {events.map(ev => <option key={ev.id} value={ev.id}>{ev.title}</option>)}
            </Select>
          </div>
        </div>

        {/* Reports Grid */}
        <div className="grid sm:grid-cols-2 gap-6">         
          <div className="bg-white dark:bg-gray-800 p-6 sm:p-8 rounded-2xl shadow-lg border border-gray-200 dark:border-gray-700 space-y-4">
            <h2 className="text-lg font-semibold text-gray-900 dark:text-white">Sales Report</h2>
            <p className="text-sm text-gray-600 dark:text-gray-400">
              Download a detailed CSV of all ticket sales.
            </p>
            <Button onClick={() => go(dlOrganizerSales, 'organizer-sales.csv')} className="w-full">
              Download Sales CSV
            </Button>
          </div>

          {/* Revenue Report Card */}
          <div className="bg-white dark:bg-gray-800 p-6 sm:p-8 rounded-2xl shadow-lg border border-gray-200 dark:border-gray-700 space-y-4">
            <h2 className="text-lg font-semibold text-gray-900 dark:text-white">Revenue Report</h2>
            <p className="text-sm text-gray-600 dark:text-gray-400">
              Get an overview of revenue generated by event.
            </p>
            <Button onClick={() => go(dlOrganizerRevenue, 'organizer-revenue.csv')} variant="secondary" className="w-full">
              Download Revenue CSV
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}